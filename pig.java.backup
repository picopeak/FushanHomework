package com.example.pig;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.StringReader;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.List;
import java.util.jar.Attributes;

import javax.xml.parsers.SAXParser;
import javax.xml.parsers.SAXParserFactory;

import org.apache.http.HttpEntity;
import org.apache.http.HttpResponse;
import org.apache.http.NameValuePair;
import org.apache.http.client.ClientProtocolException;
import org.apache.http.client.HttpClient;
import org.apache.http.client.entity.UrlEncodedFormEntity;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.message.BasicNameValuePair;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;
import org.xml.sax.XMLReader;
import org.xml.sax.helpers.DefaultHandler;

import android.annotation.TargetApi;
import android.app.Activity;
import android.content.Intent;
import android.os.Build;
import android.os.Bundle;
import android.os.StrictMode;
import android.support.v4.app.NavUtils;
import android.util.Log;
import android.view.Menu;
import android.view.MenuItem;
import android.widget.TextView;

import org.jsoup.Jsoup;
import org.jsoup.helper.Validate;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.select.Elements;

import java.io.IOException;


public class DisplayMessageActivity extends Activity {

	public class DataHandler extends DefaultHandler {
		//class declaration goes here
		//list for imported product data
		private ArrayList<TextView> theViews;
		//flag to keep track of XML processing
		private boolean isEnglish = false;
		private boolean isChinese = false;
		private boolean isMath = false;
		
		private String HomeWork = "Home Work Unavaliable";

		//constructor
		public DataHandler() {
		    super();
		}
		//start of the XML document
		public void startDocument () {
			Log.i("DataHandler", "Start of XML document");
		}

		//end of the XML document
		public void endDocument () {
			Log.i("DataHandler", "End of XML document");
		}

		//opening element tag
		public void startElement (String uri, String name, String qName, Attributes atts)
		{
		    //handle the start of an element
			if(qName.equals("英语作业"))
			    isEnglish = true;
			else if(qName.equals("数学作业"))
			    isMath = true;
			else if(qName.equals("语文作业"))
			    isChinese = true;
		}

		//closing element tag
		public void endElement (String uri, String name, String qName)
		{
		    //handle the end of an element
		}

		//element content
		public void characters (char ch[], int start, int length)
		{
		    //process the element content
		}
	}
	
    private boolean Login(HttpClient httpclient, String UserName, String PassWord)
    {
	    try {
		    HttpResponse httpResponse = null;
		    HttpPost httppost = new HttpPost("http://www.fushanedu.cn/jxq/jxq_User.aspx");
		    httppost.addHeader("Content-Type", "application/x-www-form-urlencoded");
		    
	        List<NameValuePair> nameValuePairs = new ArrayList<NameValuePair>();
	        String vs = "dDwtMTIwMjU0ODg5NDs7bDxsb2dpbjpidG5sb2dpbjs+PrJFQt1nM63efREqb/0FcyQpPFwa";
	        nameValuePairs.add(new BasicNameValuePair("__VIEWSTATE", vs));
	        nameValuePairs.add(new BasicNameValuePair("login:tbxUserName", "20130825"));
	        nameValuePairs.add(new BasicNameValuePair("login:tbxPassword", "5119642"));
	        nameValuePairs.add(new BasicNameValuePair("login:btnlogin.x", "27"));
	        nameValuePairs.add(new BasicNameValuePair("login:btnlogin.y", "12"));
	        //httppost.setEntity(new UrlEncodedFormEntity(nameValuePairs));
	        httppost.setEntity(new UrlEncodedFormEntity(nameValuePairs, "GB2312"));
		    httpResponse = httpclient.execute(httppost);
		    int SC = httpResponse.getStatusLine().getStatusCode();
		    if (SC == 200) {
		    	return true;
		    }
		    httppost.abort();
	    } catch (ClientProtocolException e) {
	    	return false;
	    } catch (Exception e) {
	    	return false;
	    }
	    
	    return true;
    }

	public String getData(HttpClient httpclient)
	{
        String response = "";

        //take care of SAX, input and parsing errors
	    try
	    {
            /* Get a SAXParser from the SAXPArserFactory. */
            SAXParserFactory spf = SAXParserFactory.newInstance();
            SAXParser sp = spf.newSAXParser();

            /* Get the XMLReader of the SAXParser we created. */
            XMLReader xr = sp.getXMLReader();
            /* Create a new ContentHandler and apply it to the XML-Reader*/ 
            DataHandler myHandler = new DataHandler();
            xr.setContentHandler(myHandler);

            InputStream is = null;
	        try {
	            HttpGet get = new HttpGet("http://www.fushanedu.cn/jxq/jxq_User_jtzyck.aspx");
	            HttpResponse httpResponse = null;
	            httpResponse = httpclient.execute(get); 
	            HttpEntity entity = httpResponse.getEntity(); 
	            is = entity.getContent();
	            		
	            BufferedReader reader = new BufferedReader(new InputStreamReader(is, "GB2312"));
	            StringBuilder sb = new StringBuilder();
	            String line = null;
	            while ((line = reader.readLine()) != null) {
	            	sb.append(line + "\n");
	            }
	            
	            InputSource inputSource = new InputSource();
	            inputSource.setEncoding("GB2312");
	            response = sb.toString();
            
	            inputSource.setCharacterStream(new StringReader(response));

	            /* Parse the xml-data from our URL. */
	            xr.parse(inputSource);
	            get.abort();
	        } catch (ClientProtocolException e) {
	            e.printStackTrace();
	        } catch (IOException e) {
	            e.printStackTrace();
	        }		        		        
	    }
	    catch(SAXException se) {
	    	Log.e("AndroidTestsActivity", "SAX Error " + se.getMessage());
	    }
	    catch(Exception oe) {
	    	Log.e("AndroidTestsActivity", "Unspecified Error " + oe.getMessage());
	    }
	        //return the parsed product list
	    return response;
	}

    private String formatTime(int t){
    	return t>=10? ""+t:"0"+t;//三元运算符 t>10时取 ""+t
    }
    
 	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);

		StrictMode.setThreadPolicy(new StrictMode.ThreadPolicy.Builder()
		 .detectDiskReads()
		 .detectDiskWrites()
		 .detectAll()   // or .detectAll() for all detectable problemsparams.get("__VIEWSTATE")
		 .penaltyLog()
		 .build());
		StrictMode.setVmPolicy(new StrictMode.VmPolicy.Builder()
         .detectLeakedSqlLiteObjects()
         .detectLeakedClosableObjects()
         .penaltyLog()
         .penaltyDeath()
         .build());
      
		setContentView(R.layout.activity_display_message);

		// Get the message from the intent
	    Intent intent = getIntent();
//	    String message = intent.getStringExtra(MainActivity.EXTRA_MESSAGE);

        // 创建一个HttpGet对象
	    HttpClient httpclient = new DefaultHttpClient();
	    if (!Login(httpclient, "20130825", "5119642"))
	    	return;
	    
        TextView CurrentDate = (TextView) findViewById(R.id.CurrentDate);
        Calendar c = Calendar.getInstance();
        String time = c.get(Calendar.YEAR) + "-" +
        	formatTime(c.get(Calendar.MONTH)+1) + "-" +
        	formatTime(c.get(Calendar.DAY_OF_MONTH));
        CurrentDate.setText(time);

        TextView HomeWork = (TextView) findViewById(R.id.HomeWork);

        String HM = "";
        try
        {
            //get the string list by calling the public method
            HM = getData(httpclient);
        }
        catch(Exception pce) {
        	Log.e("AndroidTestsActivity", "PCE "+pce.getMessage());
        }
        
        HomeWork.setText(HM);

        // Show the Up button in the action bar.
		setupActionBar();
	}

	/**
	 * Set up the {@link android.app.ActionBar}, if the API is available.
	 */
	@TargetApi(Build.VERSION_CODES.HONEYCOMB)
	private void setupActionBar() {
		if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.HONEYCOMB) {
			getActionBar().setDisplayHomeAsUpEnabled(true);
		}
	}

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.display_message, menu);
		return true;
	}

	@Override
	public boolean onOptionsItemSelected(MenuItem item) {
		switch (item.getItemId()) {
		case android.R.id.home:
			// This ID represents the Home or Up button. In the case of this
			// activity, the Up button is shown. Use NavUtils to allow users
			// to navigate up one level in the application structure. For
			// more details, see the Navigation pattern on Android Design:
			//
			// http://developer.android.com/design/patterns/navigation.html#up-vs-back
			//
			NavUtils.navigateUpFromSameTask(this);
			return true;
		}
		return super.onOptionsItemSelected(item);
	}

}
